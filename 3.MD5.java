

import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class MD5 {

	public static String toNextString(byte[] hash) {
		BigInteger number = new BigInteger(1, hash);
		StringBuilder hexString = new StringBuilder(number.toString(16));
		while(hexString.length()<31) {
			hexString.insert(0, '0');
		}
		return hexString.toString();
	}
	//driver code
	public static void main(String[] args) throws NoSuchAlgorithmException {
		try {
		    System.out.println("HashCode Generated by MD5 for:");
			String s1 = "Information and Security ";
			MessageDigest md = MessageDigest.getInstance("MD5");
			byte[] hash = md.digest(s1.getBytes(StandardCharsets.UTF_8));
			System.out.println("\n" + s1 + ":" + toNextString(hash));
		} catch(NoSuchAlgorithmException e) {
			System.out.println("Exception thrown for incorrect algorithm :" + e);
		}
	}

}

1) In Jupiter notebook:MD5
import hashlib
result=hashlib.md5(b'good')
result1=hashlib.md5(b'mrng')
print("The byte equivalent of hash is: ",end="")
print(result.digest())
print("The byte equivalent of hash is:", end="")
print(result1.digest())

2)#python code to implement MD5
import hashlib
#provide Input and apply MD5
result=hashlib.md5(b'good')
#convert hsh value into hexadecimal
result=result.digest()
#Display Result
print('Message Digest',result)

SHA
3)in jupiternotebook
#python code to implement SHA
import hashlib
str=input('Enter string to encode')
#Apply SHA1
result=hashlib.sha1(str.encode())
#convert it into hexadecimal value
result=result.hexdigest()
#Display Result
print('Output of SHA1',result)
